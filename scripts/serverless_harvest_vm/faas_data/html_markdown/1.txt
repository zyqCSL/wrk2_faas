Throughout history and through a cross-section of cultures, women have transformed their appearance to conform to a beauty ideal. Ancient Chinese aristocrats bound their feet as a show of femininity; American and European women in the 1800s cinched in their waists so tightly, some suffered internal damage; in some African cultures, women continue to wear plates in their lower lips, continually stretching the skin to receive plates of larger size. The North American ideal of beauty has continually focused on women's bodies: the tiny waist of the Victorian period, the boyish figure in vogue during the flapper era, and the voluptuous curves that were the measure of beauty between the 1930s and 1950s. Current standards emphasize a toned, slender look, one that exudes fitness, youth, and health. According to psychologist Eva Szekely, "Having to be attractive at this time... means unequivocally having to be thin. In North America today, thinness is a precondition for being perceived by others and oneself as healthy." However, this relentless pursuit of thinness is not just an example of women trying to look their best, it is also a struggle for control, acceptance and success